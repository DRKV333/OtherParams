@using System
@using System.Collections.Generic
@using System.Linq
@using RazorBlade

@namespace TreeHouse.PacketDocs.Templates

@inherits HtmlTemplate<IEnumerable<IHeadingProvider>>

<!DOCTYPE html>
<html lang="en" data-bs-theme="auto">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <title>Packet Format Reference</title>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
        <link async rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.2/font/bootstrap-icons.min.css" integrity="sha256-SD4b9urSXVSzdFbPDlHqAiDZ3gPva6Ki2MPzSkvDTBc=" crossorigin="anonymous">
        <script async src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
        <style>
.w-0 { width: 0; }
.fab { width: 56px; height: 56px; }

.gr-grid {
    display: grid;
    grid-template-columns: 2fr 7fr 3fr;
    grid-template-rows: auto 1fr auto;
    grid-template-areas:
        'h h h'
        'n c t'
        'f c t';
}

.gr-header { grid-area: h; }
.gr-content { grid-area: c; }
.gr-toc { grid-area: t; }
.gr-nav { grid-area: n; }
.gr-footer { grid-area: f; }

@@media (max-width: 992px) {
    .gr-grid {
        grid-template-columns: 0px 9fr 3fr;
    }
}

@@media (max-width: 768px) {
    .gr-grid {
        grid-template-columns: 0px 12fr 0px;
    }
}
        </style>
        <script>
"use strict";
document.addEventListener('DOMContentLoaded', e => {
    const isDark = window.matchMedia?.('(prefers-color-scheme: dark)').matches;
    document.querySelectorAll(`[data-bs-theme="auto"]`).forEach(elem => elem.setAttribute('data-bs-theme', isDark ? 'dark' : 'light'));

    const main = document.getElementById('main');
    document.querySelectorAll('#nav a[data-bs-toggle="pill"]').forEach(elem => {
        elem.addEventListener('shown.bs.tab', show => {
            bootstrap.ScrollSpy.getInstance(main).refresh();
            window.location.hash = show.target.getAttribute('data-bs-target').substr('#page-'.length);
        });
    });

    document.getElementById('toc').addEventListener('click', click => {
        if (click.target.tagName == 'A') {
            const path = click.target.getAttribute('href').substr(1).split('-');
            window.location.hash = `${path[0]}/${path.slice(1).join('-')}`;
        }
    });

    const hash = window.location.hash;
    const path = hash ? hash.substr(1).split('/') : [""];
    
    if (path.length >= 1) {
        (
            document.getElementById(`nav-${path[0]}`) ??
            document.querySelector('#nav a:first-child')
        ).classList.add('active');

        (
            document.getElementById(`page-${path[0]}`) ??
            document.querySelector('#main .tab-pane:first-child')
        ).classList.add('show', 'active');

        (
            document.getElementById(`toc-${path[0]}`) ??
            document.querySelector('#toc .tab-pane:first-child')
        ).classList.add('show', 'active');
    }

    if (path.length >= 2) {
        document.getElementById(`${path[0]}-${path[1]}`)?.scrollIntoView();
    }
});
        </script>
    </head>
    <body>
        <button type="button" data-bs-toggle="offcanvas" data-bs-target="#toc"
                class="fab position-absolute bottom-0 end-0 m-3 p-3 text-center d-md-none rounded-circle btn btn-primary opacity-75">
            <i class="bi bi-list"></i>
        </button>
        <div class="vh-100 gr-grid">
            <header class="gr-header navbar navbar-expand-lg bg-body-secondary">
                <div class="container-fluid">
                    <button type="button" class="navbar-toggler" data-bs-toggle="offcanvas" data-bs-target="#nav">
                        <span class="navbar-toggler-icon"></span>
                    </button>
                    <div class="navbar-brand">Packet Format Reference</div>
                </div>
            </header>
            <footer class="gr-footer navbar d-none d-lg-flex bg-body-secondary">
                <div class="container-fluid">
                    <div class="navbar-brand">
                        <a class="link-body-emphasis link-underline-opacity-0" href="https://github.com/DRKV333/OtherParams">
                            <i class="bi bi-github"></i>
                        </a>
                        <a class="link-body-emphasis link-underline-opacity-0" href="https://github.com/AnotherlandServer/packet-formats">
                            <i class="bi bi-file-earmark-code-fill"></i>
                        </a>
                    </div>
                </div>
            </footer>
            <nav id="nav" class="gr-nav p-3 overflow-y-auto bg-body-tertiary offcanvas-lg offcanvas-start">
                <div class="offcanvas-header">
                    <h5 class="offcanvas-title">Navigation</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#nav" aria-label="Close"></button>
                </div>
                <div class="offcanvas-body">
                    <div class="nav nav-pills flex-column flex-nowrap">
                        @{
                            foreach (IHeadingProvider item in Model)
                            {
                                <a id="nav-@item.PageHeading.Id" class="nav-link" data-bs-toggle="pill" data-bs-target="#page-@item.PageHeading.Id">@item.PageHeading.DisplayTitle</a>
                            }
                        }
                        <hr class="d-lg-none" />
                        <a class="nav-link d-lg-none" href="https://github.com/DRKV333/OtherParams">
                            <i class="bi bi-github"></i>
                            OtherParams
                        </a>
                        <a class="nav-link d-lg-none" href="https://github.com/AnotherlandServer/packet-formats">
                            <i class="bi bi-file-earmark-code-fill"></i>
                            packet-formats
                        </a>
                    </div>
                </div>
            </nav>
            <main id="main" class="gr-content p-3 overflow-y-auto" data-bs-spy="scroll" data-bs-target="#toc" data-bs-smooth-scroll="true" tabindex="0">
                <div class="tab-content">
                    @{
                        foreach (IHeadingProvider item in Model)
                        {
                            <div id="page-@item.PageHeading.Id" class="tab-pane fade" data-bs-target="#toc-@item.PageHeading.Id">
                                @(item)
                            </div>
                        }
                    }
                </div>
            </main>
            <nav id="toc" class="gr-toc p-3 overflow-y-auto overflow-x-hidden offcanvas-md offcanvas-bottom">
                <div class="tab-content">
                    @{
                        foreach (IHeadingProvider item in Model)
                        {
                            IEnumerable<HeadingItem>? headings = item.Headings;
                            if (headings == null)
                                throw new InvalidOperationException("Headings should be available after generating content.");
                            
                            <div id="toc-@item.PageHeading.Id" class="tab-pane fade">
                                <div class="list-group">
                                    @foreach (HeadingItem heading in headings)
                                    {
                                        <a class="list-group-item list-group-item-action" href="#@item.PageHeading.Id-@heading.Id">@heading.DisplayTitle</a>
                                    }
                                </div>
                            </div>
                        }
                    }
                </div>
            </nav>
        </div>
    </body>
</html>